AWSTemplateFormatVersion: 2010-09-09
Description: S3 Buckets for AWS CloudTrail,VPC Flowlogs,Tempalates and Config with archiving
Parameters:
    pArchiveLogsBucket:
        Description: Name of the Archive logs bucket
        Type: String
        Default: archivelogs-bucket
    pEnvironment:
        Description: environment for which bucket is created
        Type: String
        Default: tst
    pConfigBucket:
        Description: Name of the Config bucket
        Type: String
        Default: config-bucket
    pCloudTrailBucket:
        Description: Name of the Cloud Trail bucket
        Type: String
        Default: cloudtrail-bucket 
    pS3LogsBucket:
        Description: Name of the s3 Logs Bucket bucket
        Type: String
        Default: cloudtrail-bucket 
    pVpcFlowLogsBucket:
        Description: Name of the VPC Flow logs bucket
        Type: String
        Default: vpc-flowlogs-bucket
    pCFTemplateBucket:
        Description: Name of the Cloudformation Template bucket
        Type: String
        Default: cf-template-bucket
Resources:
    rS3LogsBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: LogDeliveryWrite
            BucketName: !Ref pS3LogsBucket
            LifecycleConfiguration:
                Rules:
                  - Id: Transition90daysRetain7yrs
                    Status: Enabled
                    ExpirationInDays: 2555
                    Transition:
                        TransitionInDays: 90
                        StorageClass: GLACIER
            VersioningConfiguration:
                Status: Enabled
    rS3LogsBucketPolicy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rS3LogsBucket
        Properties:
            Bucket: !Ref pS3LogsBucket
            PolicyDocument:
                Statement:
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rS3LogsBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: Restrict Delete* Actions
                    Action: s3:Delete*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rArchiveLogsBucket}/*
    rArchiveLogsBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: LogDeliveryWrite
            BucketName: !Ref pArchiveLogsBucket
            LifecycleConfiguration:
                Rules:
                  - Id: Transition90daysRetain7yrs
                    Status: Enabled
                    ExpirationInDays: 2555
                    Transition:
                        TransitionInDays: 90
                        StorageClass: GLACIER
            VersioningConfiguration:
                Status: Enabled
    rArchiveLogsBucketPolicy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rArchiveLogsBucket
        Properties:
            Bucket: !Ref pArchiveLogsBucket
            PolicyDocument:
                Statement:
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rArchiveLogsBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: Restrict Delete* Actions
                    Action: s3:Delete*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rArchiveLogsBucket}/*
    rConfigBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: Private
            BucketName: !Ref pConfigBucket
            VersioningConfiguration:
                Status: Enabled
            LoggingConfiguration:
                DestinationBucketName: !Ref rArchiveLogsBucket
                LogFilePrefix: configlogs
    rConfigS3Policy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rConfigBucket
        Properties:
            Bucket: !Ref rConfigBucket
            PolicyDocument:
                Statement:
                  - Sid: AWSConfigAclCheck
                    Effect: Allow
                    Principal:
                        Service: config.amazonaws.com
                    Action: s3:GetBucketAcl
                    Resource: !Sub arn:aws:s3:::${rConfigBucket}
                  - Sid: AWSConfigWrite
                    Effect: Allow
                    Principal:
                        Service: config.amazonaws.com
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rConfigBucket}/*
                    Condition:
                        StringEquals:
                            s3:x-amz-acl: bucket-owner-full-control
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rConfigBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: Restrict Delete* Actions
                    Action: s3:Delete*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rConfigBucket}/*
                  - Sid: DenyUnEncryptedObjectUploads
                    Effect: Deny
                    Principal: '*'
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rConfigBucket}/*
                    Condition:
                        StringNotEquals:
                            s3:x-amz-server-side-encryption: AES256
    rCloudTrailBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: Private
            BucketName: !Ref pCloudTrailBucket
            VersioningConfiguration:
                Status: Enabled
            LoggingConfiguration:
                DestinationBucketName: !Ref rArchiveLogsBucket
                LogFilePrefix: cloudtraillogs
    rCloudTrailS3Policy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rCloudTrailBucket
        Properties:
            Bucket: !Ref rCloudTrailBucket
            PolicyDocument:
                Statement:
                  - Sid: AWSCloudTrailAclCheck
                    Effect: Allow
                    Principal:
                        Service: cloudtrail.amazonaws.com
                    Action: s3:GetBucketAcl
                    Resource: !Sub arn:aws:s3:::${rCloudTrailBucket}
                  - Sid: AWSCloudTrailWrite
                    Effect: Allow
                    Principal:
                        Service: cloudtrail.amazonaws.com
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rCloudTrailBucket}/*
                    Condition:
                        StringEquals:
                            s3:x-amz-acl: bucket-owner-full-control
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rCloudTrailBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: Restrict Delete* Actions
                    Action: s3:Delete*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rCloudTrailBucket}/*
                  - Sid: DenyUnEncryptedObjectUploads
                    Effect: Deny
                    Principal: '*'
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rCloudTrailBucket}/*
                    Condition:
                        StringNotEquals:
                            s3:x-amz-server-side-encryption: AES256
    rVpcFlowLogsBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: Private
            BucketName: !Ref pVpcFlowLogsBucket
            VersioningConfiguration:
                Status: Enabled
            LoggingConfiguration:
                DestinationBucketName: !Ref rArchiveLogsBucket
                LogFilePrefix: vpcflowlogs
    rVpcFlowLogsS3Policy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rVpcFlowLogsBucket
        Properties:
            Bucket: !Ref rVpcFlowLogsBucket
            PolicyDocument:
                Statement:
                  - Sid: AWSLogDeliveryAclCheck
                    Effect: Allow
                    Principal:
                        Service: delivery.logs.amazonaws.com
                    Action: s3:GetBucketAcl
                    Resource: !Sub arn:aws:s3:::${rVpcFlowLogsBucket}
                  - Sid: AWSLogDeliveryWrite
                    Effect: Allow
                    Principal:
                        Service: delivery.logs.amazonaws.com
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rVpcFlowLogsBucket}/*
                    Condition:
                        StringEquals:
                            s3:x-amz-acl: bucket-owner-full-control
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rVpcFlowLogsBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: Restrict Delete* Actions
                    Action: s3:Delete*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rVpcFlowLogsBucket}/*
                  - Sid: DenyUnEncryptedObjectUploads
                    Effect: Deny
                    Principal: '*'
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rVpcFlowLogsBucket}/*
                    Condition:
                        StringNotEquals:
                            s3:x-amz-server-side-encryption: AES256
    rCFTemplateBucket:
        Type: AWS::S3::Bucket
        DeletionPolicy: Retain
        Properties:
            AccessControl: Private
            BucketName: !Ref pCFTemplateBucket
    rCFTemplateBucketS3Policy:
        Type: AWS::S3::BucketPolicy
        DependsOn: rCFTemplateBucket
        Properties:
            Bucket: !Ref rCFTemplateBucket
            PolicyDocument:
                Statement:
                  - Sid: Enforce HTTPS Connections
                    Action: s3:*
                    Effect: Deny
                    Principal: '*'
                    Resource: !Sub arn:aws:s3:::${rCFTemplateBucket}/*
                    Condition:
                        Bool:
                            aws:SecureTransport: false
                  - Sid: DenyUnEncryptedObjectUploads
                    Effect: Deny
                    Principal: '*'
                    Action: s3:PutObject
                    Resource: !Sub arn:aws:s3:::${rCFTemplateBucket}/*
                    Condition:
                        StringNotEquals:
                            s3:x-amz-server-side-encryption: AES256
Outputs:
    rS3LogsBucket:
        Value: !Ref rS3LogsBucket
    rArchiveLogsBucket:
        Value: !Ref rArchiveLogsBucket
    rConfigBucket:
        Value: !Ref rConfigBucket
    rCloudTrailBucket:
        Value: !Ref rCloudTrailBucket
    rCFTemplateBucket:
        Value: !Ref rCFTemplateBucket
    rVpcFlowLogsBucket:
        Value: !Ref rVpcFlowLogsBucket